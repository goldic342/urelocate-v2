from src.probability.models import UserData


class AdvicesService:
    def generate_advice(self, user_data: UserData, advices_count: int = 2) -> list[str]:
        """
        Placegolder function for now
        """
        advices = []

        if user_data.expirience_level < 3:
            advices.append(
                "Повышайте уровень опыта в своей области. Рассмотрите возможность участия в профессиональных курсах или проектах."
            )
            advices.append(
                "Создайте портфолио или завершите сертификационные программы, чтобы повысить доверие работодателей."
            )

        if user_data.local_lang_level < 2:
            advices.append(
                "Изучайте местный язык, чтобы упростить адаптацию и интеграцию в новое общество."
            )
            advices.append(
                "Посетите языковые курсы или используйте приложения для изучения языка."
            )

        if user_data.english_level < 2:
            advices.append(
                "Улучшайте знание английского языка, это поможет вам в профессиональной и повседневной жизни."
            )
            advices.append(
                "Практикуйте английский язык через разговорные клубы или чтение специализированной литературы."
            )

        if user_data.savings < 10000:
            advices.append(
                "Попробуйте увеличить свои сбережения перед переездом, чтобы чувствовать себя увереннее в новой стране."
            )
            advices.append(
                "Рассмотрите возможность временной подработки или оптимизации расходов для увеличения сбережений."
            )

        if len(user_data.tech_stack.tools) < 3:
            advices.append(
                "Расширьте свой технический стек. Добавьте новые инструменты и технологии, чтобы повысить вашу конкурентоспособность."
            )
            advices.append(
                "Освойте технологии, популярные на рынке вашей целевой страны, чтобы повысить шансы на трудоустройство."
            )

        if user_data.dependents.children > 0:
            advices.append(
                "Учитывайте потребности ваших детей при планировании переезда, включая школы и досуг."
            )
            advices.append(
                "Изучите образовательные и медицинские учреждения для детей в вашей целевой стране."
            )
        if user_data.dependents.adults > 1:
            advices.append(
                "Учтите дополнительные расходы на взрослых членов семьи при планировании бюджета."
            )
            advices.append(
                "Рассмотрите возможность поиска работы или получения социальных льгот для взрослых членов семьи."
            )

        return advices[:advices_count]
